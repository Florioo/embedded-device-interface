/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.9.1 */

#ifndef PB_INTERFACE_PB_H_INCLUDED
#define PB_INTERFACE_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Enum definitions */
typedef enum _StatusCodeEnum {
    StatusCodeEnum_SUCCESS = 0,
    StatusCodeEnum_GENERAL_ERROR = -1,
    StatusCodeEnum_PARAMETER_NOT_FOUND = -2
} StatusCodeEnum;

/* Struct definitions */
typedef PB_BYTES_ARRAY_T(64) KeyValue_value_t;
typedef struct _KeyValue {
    uint32_t key;
    /* Variable lengtj byes max 64 */
    KeyValue_value_t value;
} KeyValue;

typedef struct _SetRequest {
    pb_callback_t key_values;
} SetRequest;

typedef struct _GetRequest {
    pb_size_t keys_count;
    uint32_t keys[16];
} GetRequest;

typedef struct _StatusResponse {
    StatusCodeEnum code;
    bool has_message;
    char message[64];
} StatusResponse;

typedef struct _Message {
    pb_callback_t cb_content;
    pb_size_t which_content;
    union {
        SetRequest set_request;
        GetRequest get_request;
        StatusResponse status_response; /* Error response */
    } content;
} Message;


#ifdef __cplusplus
extern "C" {
#endif

/* Helper constants for enums */
#define _StatusCodeEnum_MIN StatusCodeEnum_PARAMETER_NOT_FOUND
#define _StatusCodeEnum_MAX StatusCodeEnum_SUCCESS
#define _StatusCodeEnum_ARRAYSIZE ((StatusCodeEnum)(StatusCodeEnum_SUCCESS+1))





#define StatusResponse_code_ENUMTYPE StatusCodeEnum


/* Initializer values for message structs */
#define Message_init_default                     {{{NULL}, NULL}, 0, {SetRequest_init_default}}
#define KeyValue_init_default                    {0, {0, {0}}}
#define SetRequest_init_default                  {{{NULL}, NULL}}
#define GetRequest_init_default                  {0, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}
#define StatusResponse_init_default              {_StatusCodeEnum_MIN, false, ""}
#define Message_init_zero                        {{{NULL}, NULL}, 0, {SetRequest_init_zero}}
#define KeyValue_init_zero                       {0, {0, {0}}}
#define SetRequest_init_zero                     {{{NULL}, NULL}}
#define GetRequest_init_zero                     {0, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}
#define StatusResponse_init_zero                 {_StatusCodeEnum_MIN, false, ""}

/* Field tags (for use in manual encoding/decoding) */
#define KeyValue_key_tag                         1
#define KeyValue_value_tag                       2
#define SetRequest_key_values_tag                1
#define GetRequest_keys_tag                      1
#define StatusResponse_code_tag                  1
#define StatusResponse_message_tag               2
#define Message_set_request_tag                  1
#define Message_get_request_tag                  2
#define Message_status_response_tag              25

/* Struct field encoding specification for nanopb */
#define Message_FIELDLIST(X, a) \
X(a, STATIC,   ONEOF,    MSG_W_CB, (content,set_request,content.set_request),   1) \
X(a, STATIC,   ONEOF,    MSG_W_CB, (content,get_request,content.get_request),   2) \
X(a, STATIC,   ONEOF,    MSG_W_CB, (content,status_response,content.status_response),  25)
#define Message_CALLBACK NULL
#define Message_DEFAULT NULL
#define Message_content_set_request_MSGTYPE SetRequest
#define Message_content_get_request_MSGTYPE GetRequest
#define Message_content_status_response_MSGTYPE StatusResponse

#define KeyValue_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, UINT32,   key,               1) \
X(a, STATIC,   REQUIRED, BYTES,    value,             2)
#define KeyValue_CALLBACK NULL
#define KeyValue_DEFAULT NULL

#define SetRequest_FIELDLIST(X, a) \
X(a, CALLBACK, REPEATED, MESSAGE,  key_values,        1)
#define SetRequest_CALLBACK pb_default_field_callback
#define SetRequest_DEFAULT NULL
#define SetRequest_key_values_MSGTYPE KeyValue

#define GetRequest_FIELDLIST(X, a) \
X(a, STATIC,   REPEATED, UINT32,   keys,              1)
#define GetRequest_CALLBACK NULL
#define GetRequest_DEFAULT NULL

#define StatusResponse_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, ENUM,     code,              1) \
X(a, STATIC,   OPTIONAL, STRING,   message,           2)
#define StatusResponse_CALLBACK NULL
#define StatusResponse_DEFAULT NULL

extern const pb_msgdesc_t Message_msg;
extern const pb_msgdesc_t KeyValue_msg;
extern const pb_msgdesc_t SetRequest_msg;
extern const pb_msgdesc_t GetRequest_msg;
extern const pb_msgdesc_t StatusResponse_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define Message_fields &Message_msg
#define KeyValue_fields &KeyValue_msg
#define SetRequest_fields &SetRequest_msg
#define GetRequest_fields &GetRequest_msg
#define StatusResponse_fields &StatusResponse_msg

/* Maximum encoded size of messages (where known) */
/* Message_size depends on runtime parameters */
/* SetRequest_size depends on runtime parameters */
#define GetRequest_size                          96
#define INTERFACE_PB_H_MAX_SIZE                  GetRequest_size
#define KeyValue_size                            72
#define StatusResponse_size                      76

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
